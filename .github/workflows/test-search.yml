name: Test Search

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-search:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create test config
      run: |
        cp config.json.template config.json
        # ダミーのAPIキーでテスト用に更新
        sed -i 's/YOUR_OPENAI_API_KEY/dummy_api_key/g' config.json
        sed -i 's/YOUR_SMTP_SERVER/dummy.smtp.server/g' config.json
        sed -i 's/YOUR_EMAIL/dummy@example.com/g' config.json
        sed -i 's/YOUR_PASSWORD/dummy_password/g' config.json
        sed -i 's/RECIPIENT_EMAIL/dummy@example.com/g' config.json
        echo "テスト用 config.json を作成しました"
    
    - name: Test search function
      run: |
        # 検索機能のみをテストするPythonスクリプトを実行
        python -c "
import sys
import json
from kkj_search import KKJSearcher

try:
    print('=== 官公需検索機能テスト開始 ===')
    
    # 設定ファイル読み込み
    with open('config.json', 'r', encoding='utf-8') as f:
        config = json.load(f)
    
    # 検索実行
    searcher = KKJSearcher(config)
    
    print(f'検索対象組織: {config[\"organization\"]}')
    print(f'検索キーワード: {\", \".join(config[\"keywords\"])}')
    
    # 検索実行
    results = searcher.search()
    print(f'\\n検索完了: {len(results)} 件の案件を取得')
    
    # 新規案件の確認
    new_items = searcher.check_new_items(results)
    print(f'新規案件数: {len(new_items)} 件')
    
    # 統計情報を保存
    stats = {
        'total_results': len(results),
        'new_items': len(new_items),
        'keywords': config['keywords'],
        'organization': config['organization']
    }
    with open('search_stats.json', 'w', encoding='utf-8') as f:
        json.dump(stats, f, ensure_ascii=False, indent=2)
    
    print('\\n=== テスト完了 ===')
    print('検索機能は正常に動作しています')
    
except Exception as e:
    print(f'\\nエラーが発生しました: {type(e).__name__}: {str(e)}')
    import traceback
    traceback.print_exc()
    sys.exit(1)
"
    
    - name: Check test results
      if: always()
      run: |
        # テスト結果の確認
        if [ -f "search_stats.json" ]; then
          echo "=== 検索統計情報 ==="
          cat search_stats.json
        else
          echo "検索統計情報が見つかりません"
        fi
        
        # データベースファイルの確認
        if [ -f "kkj_search.db" ]; then
          echo -e "\n=== データベースファイル情報 ==="
          ls -lh kkj_search.db
        fi
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: search-test-results-${{ github.run_number }}
        path: |
          *.log
          search_stats.json
          kkj_search.db
        if-no-files-found: warn
        retention-days: 7