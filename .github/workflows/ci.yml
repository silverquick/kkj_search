name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black mypy
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      run: |
        black --check *.py
    
    - name: Type check with mypy
      run: |
        mypy *.py --ignore-missing-imports || true
    
    - name: Create test config
      run: |
        # Create a test config file for CI
        cp config.json.template config.json
        # Update config with test values if secrets are available
        if [ -n "${{ secrets.SMTP_SERVER }}" ]; then
          python -c "import json; config = json.load(open('config.json')); config['smtp']['server'] = '${{ secrets.SMTP_SERVER }}'; config['smtp']['port'] = int('${{ secrets.SMTP_PORT || 587 }}'); json.dump(config, open('config.json', 'w'), indent=2)"
        fi
    
    - name: Test SMTP connection
      if: ${{ secrets.SMTP_SERVER != '' }}
      run: |
        python test_smtp_connection.py --no-send
      continue-on-error: true
    
    - name: Run tests
      run: |
        # Check if test files exist
        if find . -name "test_*.py" -o -name "*_test.py" | grep -q .; then
          python -m pytest . -v --cov=. --cov-report=term-missing
        else
          echo "No test files found, skipping pytest"
        fi