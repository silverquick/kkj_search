name: Scheduled KKJ Search

on:
  schedule:
    # Run at 09:00 JST (00:00 UTC) every day
    - cron: '0 0 * * *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  search:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run KKJ Search
      env:
        # GitHub Secrets for sensitive data
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        # Create config.json from template and environment variables
        python -c "
        import json
        import os
        
        config = {
            'smtp': {
                'server': os.environ.get('SMTP_SERVER', 'smtp.gmail.com'),
                'port': int(os.environ.get('SMTP_PORT', '587')),
                'username': os.environ.get('SMTP_USERNAME', ''),
                'password': os.environ.get('SMTP_PASSWORD', ''),
                'use_tls': True
            },
            'email': {
                'from': os.environ.get('EMAIL_FROM', ''),
                'to': os.environ.get('EMAIL_TO', '').split(','),
                'subject': 'KKJ新着案件情報 - {date}'
            },
            'search': {
                'keywords': ['システム開発', 'アプリケーション開発', 'ソフトウェア開発'],
                'exclude_keywords': ['工事', '建設', '建築'],
                'max_results': 50
            },
            'openai': {
                'api_key': os.environ.get('OPENAI_API_KEY', ''),
                'model': 'gpt-3.5-turbo',
                'max_tokens': 500
            }
        }
        
        with open('config.json', 'w', encoding='utf-8') as f:
            json.dump(config, f, ensure_ascii=False, indent=2)
        "
        
        # Run the search
        python kkj_search.py
    
    - name: Upload search results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: search-results-${{ github.run_number }}
        path: |
          *.log
          *.json
        retention-days: 30